<!DOCTYPE html>

<html lang="es">
    <head>
    <title>{{ title }}</title>
    <link rel="icon" href="images/kinetia.png" type="image/jpg">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="robots" content="index, follow">
    <meta name="description" content="Explora el futuro de la creación de contenido con IA y automatización. Servicios personalizados para empresas modernas.">
    <meta name="keywords" content="automatización, inteligencia artificial, IA, creación de contenido, contenido con IA, productividad empresarial, eficiencia digital, automatización procesos, Kinetia">

    <!-- Open Graph -->
    <meta property="og:type" content="website">
    <meta property="og:title" content="Kinetia | Automatización con IA para empresas modernas">
    <meta property="og:description" content="Explora el futuro de la creación de contenido con IA y automatización. Servicios personalizados para empresas modernas.">
    <meta property="og:url" content="https://kinetia.tech">
    <meta property="og:image" content="https://kinetia.tech/images/banner.png">

    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:title" content="Kinetia | Automatización con IA para empresas modernas">
    <meta name="twitter:description" content="Transforma tu negocio con automatización, IA y contenido inteligente.">
    <meta name="twitter:image" content="https://kinetia.tech/images/twitter.png">

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="/css/main.css">
    <script src="/scripts/general/functions.js"></script>
  </head>
  <body>
    {% include 'header.njk' %}

    {% block content %}

        {{ content | safe }}

    {% endblock %}
    
    {% include 'button.njk' %}
    {% include 'footer.njk' %}

    <script src="/scripts/general/setup.js"></script>

    <script>
      function loadScript(a){
        var b = document.getElementsByTagName("head")[0],
            c = document.createElement("script");
        c.type = "text/javascript";
        c.src = "https://tracker.metricool.com/resources/be.js";
        c.onreadystatechange = a;
        c.onload = a;
        b.appendChild(c);
      }
      loadScript(function(){
        beTracker.t({hash:"108ffc91db984e982d0f1abfd84c3856"});
      });
    </script>

  </body>
  </html>

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chatbot Kinetia</title>
    <style>
        /* Estilos para el botón del chatbot */
        .kinetia-chat-button {
            position: fixed;
            bottom: 30px;
            right: 30px;
            width: 65px;
            height: 65px;
            background-color: #f7d618;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
            transition: all 0.3s ease;
            z-index: 999;
        }

        .kinetia-chat-button:hover {
            transform: scale(1.1);
            box-shadow: 0 6px 16px rgba(0, 0, 0, 0.35);
        }

        .kinetia-chat-icon {
            width: 30px;
            height: 30px;
            fill: #222;
        }

        /* Estilos para la ventana del chat - Modo oscuro */
        .kinetia-chat-window {
            position: fixed;
            bottom: 110px;
            right: 30px;
            width: 380px;
            height: 500px;
            background-color: #222;
            border-radius: 15px;
            box-shadow: 0 5px 25px rgba(0, 0, 0, 0.4);
            display: none;
            flex-direction: column;
            overflow: hidden;
            z-index: 998;
            transition: all 0.3s ease;
            border: 1px solid #333;
        }

        .kinetia-chat-window.active {
            display: flex;
        }

        /* Header del chat */
        .kinetia-chat-header {
            background-color: #1a1a1a;
            color: white;
            padding: 15px 20px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            border-bottom: 2px solid #f7d618;
        }

        .kinetia-chat-title {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .kinetia-chat-logo {
            width: 28px;
            height: 28px;
        }

        .kinetia-chat-title h3 {
            margin: 0;
            font-size: 18px;
            font-weight: 500;
            color: #f7d618;
        }

        .kinetia-chat-close {
            background: none;
            border: none;
            color: #f7d618;
            font-size: 22px;
            cursor: pointer;
            padding: 0;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        /* Contenido del chat */
        .kinetia-chat-body {
            flex-grow: 1;
            padding: 20px;
            overflow-y: auto;
            background-color: #2a2a2a;
        }

        .kinetia-chat-message {
            margin-bottom: 15px;
            max-width: 80%;
            padding: 12px 15px;
            border-radius: 15px;
            position: relative;
            font-size: 15px;
            line-height: 1.4;
        }

        .kinetia-chat-message.bot {
            background-color: #3a3a3a;
            color: #e0e0e0;
            border-top-left-radius: 0;
            align-self: flex-start;
            margin-right: auto;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        .kinetia-chat-message.user {
            background-color: #f7d618;
            color: #222;
            border-top-right-radius: 0;
            align-self: flex-end;
            margin-left: auto;
            font-weight: 500;
        }

        /* Área para escribir mensajes */
        .kinetia-chat-input-area {
            padding: 15px;
            border-top: 1px solid #333;
            display: flex;
            background-color: #1a1a1a;
        }

        .kinetia-chat-input {
            flex-grow: 1;
            padding: 12px 15px;
            border: 1px solid #444;
            border-radius: 25px;
            outline: none;
            font-size: 15px;
            resize: none;
            max-height: 100px;
            min-height: 24px;
            background-color: #333;
            color: #e0e0e0;
        }

        .kinetia-chat-input::placeholder {
            color: #888;
        }

        .kinetia-chat-send {
            background-color: #f7d618;
            color: #222;
            border: none;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            margin-left: 10px;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.2s ease;
        }

        .kinetia-chat-send:hover {
            background-color: #e6c500;
            transform: scale(1.05);
        }

        .kinetia-chat-messages {
            display: flex;
            flex-direction: column;
        }

        /* Animación para el botón de chat */
        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.1); }
            100% { transform: scale(1); }
        }

        .pulse {
            animation: pulse 2s infinite;
        }

        /* Notificación de nuevo mensaje */
        .kinetia-chat-notification {
            position: absolute;
            top: -8px;
            right: -5px;
            background-color: #ff4444;
            color: white;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 12px;
            font-weight: bold;
            display: none;
        }

        /* Indicador de escritura */
        .typing-indicator {
            display: flex;
            align-items: center;
        }

        .typing-indicator::after {
            content: '';
            width: 4px;
            height: 4px;
            margin-left: 4px;
            background-color: #f7d618;
            border-radius: 50%;
            animation: typing 1.5s infinite;
        }

        @keyframes typing {
            0%, 60%, 100% { opacity: 0; }
            30% { opacity: 1; }
        }

        /* Estilos responsivos */
        @media (max-width: 480px) {
            .kinetia-chat-window {
                width: 100%;
                height: 100%;
                bottom: 0;
                right: 0;
                border-radius: 0;
            }
            
            .kinetia-chat-button {
                bottom: 20px;
                right: 20px;
            }
        }
    </style>
</head>
<body>

    <!-- Botón del chatbot -->
    <div class="kinetia-chat-button pulse" id="kinetiaChatButton">
        <span class="kinetia-chat-notification" id="kinetiaChatNotification">1</span>
        <svg class="kinetia-chat-icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path d="M20 2H4C2.9 2 2 2.9 2 4V22L6 18H20C21.1 18 22 17.1 22 16V4C22 2.9 21.1 2 20 2ZM20 16H6L4 18V4H20V16Z"/>
        </svg>
    </div>

    <!-- Ventana del chatbot -->
    <div class="kinetia-chat-window" id="kinetiaChatWindow">
        <div class="kinetia-chat-header">
            <div class="kinetia-chat-title">
                <svg class="kinetia-chat-logo" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path fill="#f7d618" d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>
                    <path fill="#f7d618" d="M12 6c-3.31 0-6 2.69-6 6s2.69 6 6 6 6-2.69 6-6-2.69-6-6-6zm0 10c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z"/>
                </svg>
                <h3>Asistente Kinetia</h3>
            </div>
            <button class="kinetia-chat-close" id="kinetiaChatClose">×</button>
        </div>
        <div class="kinetia-chat-body">
            <div class="kinetia-chat-messages" id="kinetiaChatMessages">
                <div class="kinetia-chat-message bot">
                    ¡Hola! Soy el asistente virtual de Kinetia. ¿En qué puedo ayudarte hoy?
                </div>
            </div>
        </div>
        <div class="kinetia-chat-input-area">
            <input type="text" class="kinetia-chat-input" id="kinetiaChatInput" placeholder="Escribe tu mensaje aquí..." />
            <button class="kinetia-chat-send" id="kinetiaChatSend">
                <svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M2 21L23 12L2 3V10L17 12L2 14V21Z" fill="#222"/>
                </svg>
            </button>
        </div>
    </div>

    <script>
        // Funcionalidad del chatbot
        document.addEventListener('DOMContentLoaded', function() {
            const chatButton = document.getElementById('kinetiaChatButton');
            const chatWindow = document.getElementById('kinetiaChatWindow');
            const chatClose = document.getElementById('kinetiaChatClose');
            const chatInput = document.getElementById('kinetiaChatInput');
            const chatSend = document.getElementById('kinetiaChatSend');
            const chatMessages = document.getElementById('kinetiaChatMessages');
            const chatNotification = document.getElementById('kinetiaChatNotification');
            
            // URL del webhook - REEMPLAZAR CON TU URL REAL DE N8N
            const webhookUrl = 'https://n8n.kinetia.tech/webhook-test/29deeeba-e560-4d69-acbd-6f4115d576fa';
            
            // Mostrar/ocultar ventana de chat
            chatButton.addEventListener('click', function() {
                chatWindow.classList.toggle('active');
                chatButton.classList.remove('pulse');
                chatNotification.style.display = 'none';
                chatInput.focus();
            });
            
            chatClose.addEventListener('click', function() {
                chatWindow.classList.remove('active');
            });
            
            // Función para enviar mensaje
            function sendMessage() {
                const message = chatInput.value.trim();
                if (message) {
                    // Agregar mensaje del usuario al chat
                    addMessage(message, 'user');
                    
                    // Limpiar campo de entrada
                    chatInput.value = '';
                    
                    // Mostrar indicador de escritura
                    addTypingIndicator();
                    
                    // Preparar datos para enviar al webhook
                    const requestData = {
                        message: message,
                        userId: generateUserId(),
                        timestamp: new Date().toISOString(),
                        source: 'kinetia-website'
                    };
                    
                    console.log('Enviando datos al webhook:', requestData);
                    
                    // Enviar mensaje al webhook de n8n
                    fetch(webhookUrl, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(requestData)
                    })
                    .then(response => {
                        console.log('Respuesta recibida:', response);
                        if (!response.ok) {
                            throw new Error('Error en la respuesta del servidor: ' + response.status);
                        }
                        return response.json();
                    })
                    .then(data => {
                        console.log('Datos recibidos:', data);
                        // Remover indicador de escritura
                        removeTypingIndicator();
                        
                        // Procesar respuesta del bot
                        if (data && data.response) {
                            addMessage(data.response, 'bot');
                        } else if (data && data.message) {
                            addMessage(data.message, 'bot');
                        } else {
                            addMessage('He recibido tu mensaje. Nuestro equipo se pondrá en contacto contigo pronto.', 'bot');
                        }
                    })
                    .catch(error => {
                        console.error('Error en la conexión:', error);
                        removeTypingIndicator();
                        
                        // Mensaje alternativo en caso de error
                        addMessage('Lo siento, estamos experimentando problemas de conexión. Por favor, intenta contactarnos por email o teléfono.', 'bot');
                        
                        // Intentar enviar notificación de error
                        try {
                            fetch(webhookUrl + '/error', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify({
                                    error: error.toString(),
                                    userId: generateUserId(),
                                    timestamp: new Date().toISOString()
                                })
                            }).catch(() => {});
                        } catch (e) {
                            console.error('Error al enviar notificación de error:', e);
                        }
                    });
                }
            }
            
            // Función para añadir mensajes al chat
            function addMessage(content, sender) {
                removeTypingIndicator();
                
                const messageElement = document.createElement('div');
                messageElement.classList.add('kinetia-chat-message', sender);
                messageElement.textContent = content;
                
                chatMessages.appendChild(messageElement);
                
                // Scroll al final del chat
                chatMessages.scrollTop = chatMessages.scrollHeight;
            }
            
            // Función para mostrar indicador de escritura
            function addTypingIndicator() {
                removeTypingIndicator(); // Eliminar indicador existente si lo hay
                
                const indicator = document.createElement('div');
                indicator.classList.add('kinetia-chat-message', 'bot', 'typing-indicator');
                indicator.textContent = 'Escribiendo...';
                
                chatMessages.appendChild(indicator);
                chatMessages.scrollTop = chatMessages.scrollHeight;
            }
            
            // Función para eliminar el indicador de escritura
            function removeTypingIndicator() {
                const typingIndicator = document.querySelector('.typing-indicator');
                if (typingIndicator) {
                    typingIndicator.remove();
                }
            }
            
            // Generar ID único para el usuario
            function generateUserId() {
                if (!localStorage.getItem('kinetiaChatUserId')) {
                    localStorage.setItem('kinetiaChatUserId', 'user_' + Date.now());
                }
                return localStorage.getItem('kinetiaChatUserId');
            }
            
            // Event listeners para enviar mensajes
            chatSend.addEventListener('click', sendMessage);
            
            chatInput.addEventListener('keypress', function(e) {
                if (e.key === 'Enter' && !e.shiftKey) {
                    e.preventDefault();
                    sendMessage();
                }
            });
            
            // Mostrar notificación después de cierto tiempo
            setTimeout(function() {
                if (!chatWindow.classList.contains('active')) {
                    chatButton.classList.add('pulse');
                    chatNotification.style.display = 'flex';
                }
            }, 20000); // 20 segundos
        });
    </script>
</body>
</html>